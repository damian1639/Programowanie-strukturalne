#include <math.h>
#include <stdbool.h>

printf("tekst i typ",parametr)
scanf("tekst i typ",parametr)
typy:
%d - int
%f - float
%s - string
%lf - double 
%b - bool
%u - unsigned int
//W S K A Å¹ N I K I
%p - wskazniki
w fukncji (*x)
w print("%p ",&x)

1. Odwracanie ciagu liczb

void odwroc(int tab[], int n) 
{
    for (int i = 0; i < n/2; i++) 
    {
        int temp = tab[i];
        tab[i] = tab[n-1-i];
        tab[n-1-i] = temp;
    }
}

int main()
{
    
    unsigned int tab[] = {4, 8, 1, 6, 3, 2, 9, 5,5};
    unsigned int m = sizeof(tab) / sizeof(tab[0]);
     printf("Przed modyfikacja: ");
    for (int i = 0; i < m; i++) {
        printf("%u ", tab[i]);
    }
    printf("\n");
    odwroc(tab, m);
    printf("Po modyfikacja: ");
    for (int i = 0; i < m; i++) {
        printf("%u ", tab[i]);
    }
    printf("\n");
    
    return 0;
}

2.Unikalne

void unikalne(int n, int tab[]) {
    int wynik[n];
    int licznik = 0;
    for (int i = 0; i < n; i++) {
        int j;
        for (j = 0; j < licznik; j++) {
            if (tab[i] == wynik[j]) {
                break;
            }
        }
        if (j == licznik) {
            wynik[licznik] = tab[i];
            licznik++;
        }
    }
    for (int i = 0; i < licznik; i++) {
        printf("%d ", wynik[i]);
    }
}

3. Liczba pierwsza

int main()

{
     int p, i;
     printf("Podaj liczbe: ");
     scanf("%d", &p);
     for(i = 2; i < p; i++) 
     {
          if(p % i == 0)
          {
               printf("%d  nie jest liczba pierwsza.\n", p);
               system("PAUSE");
               return 1;
          }
     }
     printf("%d jest liczba pierwsza.\n", p);
     system("PAUSE");
     return 0;
}
